{"version":3,"sources":["firebase.js","context/ChatProvider.js","components/Navbar.jsx","components/AddText.jsx","components/Chat.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","provider","GoogleAuthProvider","ChatContext","React","createContext","ChatProvider","props","useState","uid","email","state","user","setUser","message","setMessage","useEffect","detectUser","onAuthStateChanged","uploadMessage","userLogin","a","signInWithPopup","console","log","collection","orderBy","onSnapshot","query","arrayMessage","docs","map","item","data","addMessage","uidChat","textoInput","add","fecha","Date","now","texto","Provider","value","loginOut","signOut","children","Navbar","useContext","className","onClick","AddText","onSubmit","e","preventDefault","trim","onChange","target","type","Chat","refZonachat","useRef","current","scrollTop","scrollHeight","style","height","overflowY","ref","index","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08098051.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBFEN6uRUrMJrp5mZFfjLDUQXv4nYNxe8s\",\r\n    authDomain: \"chatreact-8c123.firebaseapp.com\",\r\n    projectId: \"chatreact-8c123\",\r\n    storageBucket: \"chatreact-8c123.appspot.com\",\r\n    messagingSenderId: \"621514421192\",\r\n    appId: \"1:621514421192:web:ab766d229b2f147ffe06fd\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {db, auth, provider}","import React from 'react'\r\nimport {db, auth, provider} from '../firebase'\r\n\r\nexport const ChatContext = React.createContext()\r\n\r\nconst ChatProvider = (props) => {\r\n    \r\n    const dataUser = {uid:null, email:null, state: null}\r\n    const [user,setUser] = React.useState(dataUser)\r\n    const [message, setMessage] = React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        detectUser()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const detectUser = () => {\r\n        auth.onAuthStateChanged(user => {\r\n            if(user){\r\n                setUser({uid:user.uid, email:user.email, state:true})\r\n                uploadMessage()\r\n            }else{\r\n                setUser({uid:null, email:null, state: false})\r\n            }\r\n        })\r\n            \r\n    }\r\n    \r\n    const userLogin = async() => {\r\n        try {\r\n            await auth.signInWithPopup(provider)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    \r\n    const loginOut = () => {\r\n        auth.signOut();\r\n    }\r\n\r\n    const uploadMessage = () => {\r\n        db.collection('chat').orderBy('fecha')\r\n            .onSnapshot(query => {\r\n                const arrayMessage = query.docs.map(item => item.data())\r\n                setMessage(arrayMessage)\r\n            })\r\n    }\r\n\r\n    const addMessage = async (uidChat, textoInput) => {\r\n        try {\r\n            await db.collection('chat').add({\r\n                fecha: Date.now(),\r\n                texto: textoInput,\r\n                uid: uidChat,\r\n                email: user.email\r\n            })\r\n        } catch (error) {\r\n        console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <ChatContext.Provider value={{user, userLogin, loginOut, message, addMessage}}>\r\n            {props.children}\r\n        </ChatContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ChatProvider\r\n","import React from 'react'\r\nimport {ChatContext} from '../context/ChatProvider'\r\n\r\nconst Navbar = () => {\r\n\r\n    const {user, userLogin, loginOut} = React.useContext(ChatContext)\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark container\">\r\n            <span className=\"navbar-brand\">Chat</span>\r\n            <div>\r\n                {\r\n                    user.state ? (\r\n                        <button \r\n                        onClick={loginOut}\r\n                        className=\"btn btn-outline-danger my-2\">Sign off</button>\r\n                    \r\n                        ) : (\r\n                        <button \r\n                        onClick={userLogin}\r\n                        className=\"btn btn-outline-success my-2\">Sign in</button>\r\n                    )\r\n                }\r\n               \r\n                \r\n\r\n            </div>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport {ChatContext} from '../context/ChatProvider'\r\n\r\nconst AddText = () => {\r\n\r\n    const {addMessage, user} = React.useContext(ChatContext)\r\n    const [message, setMessage] = React.useState('')\r\n\r\n\r\n    const add = (e) => {\r\n        e.preventDefault()\r\n        if(!message.trim()){\r\n            console.log('it comes empty');\r\n            return\r\n        }\r\n        addMessage(user.uid, message)\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <form \r\n            onSubmit={add}\r\n            className='fixed-bottom input-group p-3 bg-dark container'>\r\n            <input \r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n                type=\"text\" \r\n                className='form-control'\r\n                />\r\n            <div className='input-group-append'>\r\n                <button className='btn btn-primary' type='submit'>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddText\r\n","import React from 'react'\r\nimport AddText from './AddText'\r\nimport {ChatContext} from '../context/ChatProvider'\r\n\r\nconst Chat = () => {\r\n\r\n    const {message, user} = React.useContext(ChatContext)\r\n    const refZonachat = React.useRef(null)\r\n\r\n    React.useEffect(() => {\r\n        refZonachat.current.scrollTop = refZonachat.current.scrollHeight\r\n    }, [message])\r\n\r\n    return (\r\n        <div className='mt-3 px-2 container'\r\n        style={{height: '75vh', overflowY: 'scroll'}}\r\n        ref={refZonachat}\r\n        >\r\n\r\n            {\r\n                message.map((item, index) => (\r\n                    user.uid === item.uid ? (\r\n                        <div className=\"d-flex justify-content-end mb-2\" key={index}>\r\n                            <span className='badge rounded-pill bg-danger'>\r\n                                {item.email}\r\n                            </span>\r\n                            <span>---</span>\r\n                            <span className='badge rounded-pill bg-primary'>\r\n                                {item.texto}\r\n                            </span>\r\n                        </div>\r\n\r\n                    ) : (\r\n                        <div className=\"d-flex justify-content-start mb-2\" key={index}>\r\n                            <span className='badge rounded-pill bg-danger'>\r\n                                {item.email} \r\n                            </span>\r\n                            <span>---</span>\r\n                            <span className='badge rounded-pill bg-secondary'>\r\n                                {item.texto}\r\n                            </span>\r\n                        </div>\r\n\r\n                    )\r\n\r\n                ))\r\n            }\r\n\r\n\r\n\r\n            \r\n            \r\n            <AddText />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport Navbar from './components/Navbar'\r\nimport { ChatContext } from './context/ChatProvider'\r\nimport Chat from './components/Chat'\r\nconst App = () => {\r\n\r\n    const {user} = React.useContext(ChatContext)\r\n\r\n    return user !== null ?(\r\n        <div>\r\n            <Navbar />\r\n            {\r\n                user.state ? (\r\n                    <Chat />\r\n                ) : (\r\n                    <div className='lead text-center mt-5'>Log In !!!!</div>\r\n                )\r\n            }\r\n        </div>\r\n    ) : (\r\n        <div>Cargando...</div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nimport ChatProvider from './context/ChatProvider';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <ChatProvider>\n        <App />\n      \n      </ChatProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}